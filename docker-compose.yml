version: '2.3'
# Test:
# ./darknet detector test /cfg/coco.data /cfg/yolov3-tiny.cfg /weigths/yolov3-tiny-train_final.weights /images/75Crrid.jpg -out /images/test.2.jpg   -thresh 0.25
# for file in $(find /images -type f); do echo $file;  ./darknet detector test /cfg/coco.data /cfg/yolov3-tiny.cfg /weigths/yolov3-tiny-train_final.weights $file -thresh 0.1 -out $file.pred.jpg; done
services:

  darknet-video-webcam:
    build: .
    runtime: nvidia
    image: darknet-classic:latest
    volumes:
      - type: bind
        source: ./docker-entrypoint.sh
        target: /docker-entrypoint.sh
      - type: bind
        source: ./python-test.py
        target: /python-test.py
      - type: bind
        source: ./darknet/cfg
        target: /cfg
      - type: bind
        source: ./darknet/data
        target: /data
      - type: bind
        source: ./weights
        target: /weights
      - type: bind
        source: ./images
        target: /images
      - type: bind
        source: /tmp/.X11-unix
        target: /tmp/.X11-unix
      - type: bind
        source: /tmp/.docker.xauth
        target: /tmp/.docker.xauth
    environment:
      USE_ENV: 1

      # Source definition:
      # Whether to stream the source (comment if SOURCE_URI points to files)
      STREAM_SOURCE: 1

      # From a remote stream
      # SOURCE_URI: http://192.168.1.89:8080/video
      # From file(s)
      # SOURCE_URI: /images/*
      # From a video capture device
      SOURCE_URI: /dev/video0

      # DNN structure to use:
      DARKNET_CFG_PATH: /cfg/yolov3-tiny.cfg

      # DNN weights to use:
      DARKNET_WEIGHTS_PATH: /weights/yolov3-tiny.weights

      # Additional configuration, pointing to class names and more
      DARKNET_COCO_DATA_PATH: /cfg/coco.data

      # Show the output in a window
      SHOW_OUTPUT: 1
      DISPLAY: $DISPLAY

    devices:
      - /dev/video0:/dev/video0
